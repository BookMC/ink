plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "maven-publish"
    id "java-gradle-plugin"
    id "java"
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.bookmc.org"
    }
}

ext {
    def env = System.getenv()
    local = !env.GITHUB_ACTIONS
    jdk = JavaVersion.current().getMajorVersion()
    branch = "git rev-parse --abbrev-ref HEAD".execute().text
}

group = "org.bookmc"
// We add the suffix for (our) non-lts support.
// Java 8 support will be removed in the future however.
version "2.0.0${local ? "-local" : ""}${branch == "main" ? "" : "+$branch"}"

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {
    include "org.bookmc:ManifestUpgrader:0.0.1"

    implementation gradleApi()
}

gradlePlugin {
    plugins {
        ink {
            id = "org.bookmc.ink"
            implementationClass = "org.bookmc.ink.InkPlugin"
        }
    }
}

shadowJar {
    configurations = [project.configurations.include]
    archiveClassifier.set("")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.build.dependsOn(tasks.shadowJar)

publishing {
    repositories {
        maven {
            def env = System.getenv()

            boolean isEnvVarsAvailable = env.containsKey("MAVEN_USER") && env.containsKey("MAVEN_PASSWORD")

            if (isEnvVarsAvailable) {
                credentials {
                    username env.get("MAVEN_USER")
                    password env.get("MAVEN_PASSWORD")
                }
            }

            url = !isEnvVarsAvailable ? "$buildDir/repository" : "https://maven.bookmc.org/releases/"
        }
    }

    publications {
        //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = project.name
                url = "https://github.com/BookMC/${project.name}"

                developers {
                    developer {
                        name = "ChachyDev"
                    }
                }
            }
        }
    }
}